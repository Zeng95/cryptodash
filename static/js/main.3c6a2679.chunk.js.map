{"version":3,"sources":["utils/index.js","hooks/useApp.js","context/AppContext.js","components/Shared/Page.js","components/Shared/Styles.js","components/Shared/Tile.js","components/Settings/CoinTileHeaderGrid.js","hooks/useCoins.js","context/SettingsContext.js","components/Dashboard/PriceTile.js","components/Dashboard/PriceGrid.js","components/Shared/CoinTileImage.js","components/Dashboard/CoinSpotlight.js","components/Dashboard/HighchartsOptions.js","components/Dashboard/PriceChart.js","components/Dashboard/HighchartsTheme.js","components/Dashboard/index.js","components/Settings/CoinTile.js","components/Settings/CoinGrid.js","components/Settings/ConfirmButton.js","components/Settings/Search.js","components/Settings/WelcomeMessage.js","components/Settings/index.js","components/Shared/Content.js","components/App/AppLayout.js","components/App/AppNavbar.js","components/App/index.js","serviceWorker.js","index.js"],"names":["isEmpty","obj","Object","keys","length","formatNumber","number","Number","toString","slice","useApp","defaultPage","useState","page","setPage","firstVisit","setFirstVisit","prices","setPrices","favorites","a","priceList","i","cc","priceFull","price","push","console","error","results","filter","item","currentFav","index","priceHistorical","moment","subtract","toDate","log","saveSettings","useEffect","cryptoDashData","JSON","parse","localStorage","getItem","fetchPrices","fetchHistorical","currentFavCoin","confirmFavorites","setItem","stringify","AppContext","React","createContext","AppContextProvider","props","app","Provider","value","children","Consumer","Page","name","className","Component","lightBlueBackground","darkBlueBackground","subtleBoxShadow","greenBoxShadow","Tile","styled","div","SelectableTile","DeletableTile","DisabledTile","CoinTileHeaderGridStyled","CoinSymbol","span","CoinName","CoinDeleteIcon","CoinTileHeaderGrid","this","coin","topSection","size","title","Symbol","setApiKey","process","useCoins","coins","setCoins","coinBaseUrl","setCoinBaseUrl","filteredCoins","setFilteredCoins","favoriteCoins","setFavoriteCoins","setCurrentFavCoin","coinList","Data","BaseImageUrl","fetchCoins","addCoin","coinKey","removeCoin","_","pull","isInFavoriteCoins","includes","setCurrentFavorite","symbol","SettingsContext","SettingsContextProvider","PriceTileStyled","compact","css","JustifyLeft","ChangePercent","red","TickerPrice","PriceTile","data","onClick","CHANGEPCT24HOUR","PRICE","PriceTileCompact","TileClass","USD","PriceGirdStyled","PriceGird","map","key","ImageStyled","img","spotlight","CoinTileImage","imgUrl","ImageUrl","src","alt","SpotlightTile","SpotlightName","h2","CoinSpotlight","text","yAxis","xAxis","accessibility","rangeDescription","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","Highcharts","setOptions","colors","chart","backgroundColor","borderColor","borderWidth","plotBackgroundColor","plotBorderColor","plotBorderWidth","style","color","font","subtitle","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","fontFamily","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","itemHoverStyle","itemHiddenStyle","credits","navigation","buttonOptions","symbolStroke","theme","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","select","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","PriceChart","highcharts","options","HighchartsOptions","ChartGrid","Dashboard","PriceGrid","CoinTile","handleClick","Name","CoinTileClass","CoinGridStyled","CoinGrid","favCoinKeys","coinKeys","getLowerSectionCoins","CenterDiv","ConfirmButtonStyled","button","ConfirmButton","AppContextConsumer","SettingsContextConsumer","SearchGrid","SearchTitle","SearchInput","input","Search","handleFilterCoins","debounce","inputValue","coinSymbols","coinNames","allStringsToSearch","concat","fuzzyResults","fuzzy","result","string","entries","forEach","event","target","onKeyUp","handleKeyUp","WelcomeStyled","h1","Welcome","Settings","WelcomeMessage","Content","AppNavBarStyled","header","Logo","ControlButtonElem","active","LanguageButton","ControlButton","str","charAt","toUpperCase","substring","toLowerCase","capitalize","AppNavBar","App","AppLayout","AppNavbar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3c6a2679.chunk.js","sourcesContent":["export function isEmpty(obj) {\n  // Object.keys will return an Array, which contains the property name of the object.\n  // If the length of the array is 0, then we know that the object is empty.\n  return Object.keys(obj).length === 0\n}\n\nexport function formatNumber(number) {\n  // First, convert the number to a string and slice the string\n  // Second, convert the string back to a number\n  return Number(number.toString().slice(0, 7))\n}\n","import cc from 'cryptocompare'\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { isEmpty } from 'utils'\n\nconst TIME_UNITS = 10 // 10 days, 10 months or 10 weeks\n\nfunction useApp(defaultPage) {\n  const [page, setPage] = useState(defaultPage || 'dashboard')\n  const [firstVisit, setFirstVisit] = useState(false)\n  const [prices, setPrices] = useState([])\n\n  useEffect(() => {\n    // The JSON.parse() method parses a JSON string\n    const cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'))\n\n    if (!cryptoDashData) {\n      saveSettings()\n    } else if (!firstVisit && page === 'dashboard') {\n      fetchPrices(cryptoDashData.favorites)\n      fetchHistorical(cryptoDashData.currentFavCoin)\n    }\n  }, [firstVisit, page])\n\n  async function fetchPrices(favorites) {\n    const priceList = []\n\n    for (let i = 0; i < favorites.length; i++) {\n      try {\n        // Await for this function to return data\n        const price = await cc.priceFull(favorites[i], 'USD')\n        priceList.push(price)\n      } catch (error) {\n        console.error(`Fetch price error: ${error}`)\n      }\n    }\n\n    const results = priceList.filter(item => !isEmpty(item))\n    setPrices(results)\n  }\n\n  async function fetchHistorical(currentFav) {\n    const priceList = []\n\n    for (let index = TIME_UNITS; index >= 1; index--) {\n      try {\n        const price = await cc.priceHistorical(\n          currentFav,\n          'USD',\n          moment().subtract(index, 'month').toDate() // subtract means 减\n        )\n        priceList.push(price)\n      } catch (error) {\n        console.error(`Fetch price error: ${error}`)\n      }\n    }\n    console.log(priceList)\n    // const historical = [\n    //   {\n    //     name: currentFav,\n    //     data: priceList.map((price, index) => {})\n    //   }\n    // ]\n\n    // return historical\n  }\n\n  function saveSettings() {\n    setFirstVisit(true)\n    setPage('settings')\n  }\n\n  function confirmFavorites(favorites) {\n    localStorage.setItem(\n      'cryptoDash',\n      JSON.stringify({ favorites, currentFavCoin: favorites[0] })\n    )\n\n    setFirstVisit(false)\n    setPage('dashboard')\n  }\n\n  return {\n    page,\n    prices,\n    firstVisit,\n    setPage,\n    saveSettings,\n    confirmFavorites\n  }\n}\n\nexport default useApp\n","import React from 'react'\nimport useApp from '../hooks/useApp'\n\n// Create a Context object\nconst AppContext = React.createContext()\n\nfunction AppContextProvider(props) {\n  const app = useApp()\n  const { Provider } = AppContext\n\n  return <Provider value={{ ...app }}>{props.children}</Provider>\n}\n\nexport { AppContext, AppContextProvider }\n","import { AppContext } from 'context/AppContext'\nimport React, { Component } from 'react'\n\nconst { Consumer } = AppContext\n\nclass Page extends Component {\n  render() {\n    return (\n      <Consumer>\n        {({ page }) => {\n          const { name, children } = this.props\n\n          if (page === name) {\n            return <div className=\"content\">{children}</div>\n          }\n\n          return null\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Page\n","const theme = 'dark'\n//const theme = 'light'\nexport const lightTheme = theme === 'light'\n\nexport const color = lightTheme ? 'white' : '#061a44'\nexport const color2 = lightTheme ? 'white' : '#010e2c'\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a'\n\nif (lightTheme) {\n  document.body.style.background = '#e1eaee'\n  document.body.style.color = '#061a44'\n}\n\nexport const lightBlueBackground = `background-color: ${color};`\nexport const darkBlueBackground = `background-color: ${color2};`\nexport const greenBackground = `background-color: ${color3};`\n\nexport const fontColorGreen = `color: #03A9F4;`\nexport const fontColorWhite = `color: white;`\n\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${\n  lightTheme ? '#a9b6ff' : '#121d5b'\n};`\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17;`\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111;`\n\nexport const fontSizeBig = 'font-size: 2em;'\nexport const fontSize1 = 'font-size: 1.5em;'\nexport const fontSize2 = 'font-size: 1.0em;'\nexport const fontSize3 = 'font-size: .75em;'\n\nexport const textAlignCenter = 'text-align: center;'\n","import styled from 'styled-components'\nimport {\n  subtleBoxShadow,\n  redBoxShadow,\n  greenBoxShadow,\n  lightBlueBackground\n} from './Styles'\n\nexport const Tile = styled.div`\n  padding: 10px;\n  ${subtleBoxShadow}\n  ${lightBlueBackground}\n`\nexport const SelectableTile = styled(Tile)`\n  &:hover {\n    cursor: pointer;\n    ${greenBoxShadow}\n  }\n`\nexport const DeletableTile = styled(Tile)`\n  &:hover {\n    cursor: pointer;\n    ${redBoxShadow}\n  }\n`\n// \"pointer-events: none;\" means users can not select\nexport const DisabledTile = styled(Tile)`\n  pointer-events: none;\n  opacity: 0.4;\n`\n","import { Delete } from '@styled-icons/material/Delete'\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { DeletableTile } from '../Shared/Tile'\n\nexport const CoinTileHeaderGridStyled = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`\nexport const CoinSymbol = styled.span`\n  justify-self: right;\n`\nconst CoinName = styled.span`\n  font-style: italic;\n`\nconst CoinDeleteIcon = styled.div`\n  display: none;\n  justify-self: right;\n\n  ${DeletableTile}:hover & {\n    display: block;\n    color: red;\n  }\n`\n\nclass CoinTileHeaderGrid extends Component {\n  render() {\n    const { coin, topSection } = this.props\n\n    return (\n      <CoinTileHeaderGridStyled>\n        <CoinName>{coin.CoinName}</CoinName>\n\n        {topSection ? (\n          <CoinDeleteIcon>\n            <Delete size=\"16\" title=\"Delete coin\" />\n          </CoinDeleteIcon>\n        ) : (\n          <CoinSymbol>{coin.Symbol}</CoinSymbol>\n        )}\n      </CoinTileHeaderGridStyled>\n    )\n  }\n}\n\nexport default CoinTileHeaderGrid\n","import cc from 'cryptocompare'\nimport _ from 'lodash'\nimport { useEffect, useState } from 'react'\n\nconst API_KEY = process.env.REACT_APP_CRYPTOCOMPARE_API_KEY\nconst MAX_FAVORITES = 10\n\ncc.setApiKey(API_KEY)\n\nfunction useCoins() {\n  const [coins, setCoins] = useState()\n  const [coinBaseUrl, setCoinBaseUrl] = useState()\n  const [filteredCoins, setFilteredCoins] = useState()\n  const [favoriteCoins, setFavoriteCoins] = useState([\n    'BTC',\n    'ETH',\n    'XMR',\n    'DOGE'\n  ])\n  const [currentFavCoin, setCurrentFavCoin] = useState(favoriteCoins[0])\n\n  // Will trigger the callback only after the first render\n  useEffect(() => {\n    saveSettings()\n    fetchCoins()\n  }, [])\n\n  async function fetchCoins() {\n    try {\n      const { Data, BaseImageUrl } = await cc.coinList()\n\n      setCoins(Data)\n      setCoinBaseUrl(BaseImageUrl)\n    } catch (error) {\n      console.error(`Fetch coins error: ${error}`)\n    }\n  }\n\n  function saveSettings() {\n    let cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'))\n\n    if (cryptoDashData) {\n      setFavoriteCoins(cryptoDashData.favorites)\n      setCurrentFavCoin(cryptoDashData.currentFavCoin)\n    }\n  }\n\n  function addCoin(coinKey) {\n    const favorites = [...favoriteCoins]\n\n    // Less than 10\n    if (favoriteCoins.length < MAX_FAVORITES) {\n      favorites.push(coinKey)\n      setFavoriteCoins(favorites)\n    }\n  }\n\n  function removeCoin(coinKey) {\n    const favorites = [...favoriteCoins]\n\n    setFavoriteCoins(_.pull(favorites, coinKey))\n  }\n\n  function isInFavoriteCoins(coinKey) {\n    return favoriteCoins.includes(coinKey)\n  }\n\n  function setCurrentFavorite(symbol) {\n    setCurrentFavCoin(symbol)\n\n    // cryptoDashData is an object\n    const cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'))\n\n    localStorage.setItem(\n      'cryptoDash',\n      // 提取 cryptoDashData 所有值，然后合并新的值\n      JSON.stringify({ ...cryptoDashData, currentFavCoin: symbol })\n    )\n  }\n\n  return {\n    coins,\n    coinBaseUrl,\n    favoriteCoins,\n    filteredCoins,\n    currentFavCoin,\n    addCoin,\n    removeCoin,\n    setFilteredCoins,\n    isInFavoriteCoins,\n    setCurrentFavorite\n  }\n}\n\nexport default useCoins\n","import React from 'react'\nimport useCoins from '../hooks/useCoins'\n\n// Create a Context object\nconst SettingsContext = React.createContext()\n\nfunction SettingsContextProvider(props) {\n  const coins = useCoins()\n  const { Provider } = SettingsContext\n\n  return <Provider value={{ ...coins }}>{props.children}</Provider>\n}\n\nexport { SettingsContext, SettingsContextProvider }\n","import {\n  CoinSymbol,\n  CoinTileHeaderGridStyled\n} from 'components/Settings/CoinTileHeaderGrid'\nimport {\n  fontSize3,\n  fontSizeBig,\n  greenBoxShadow\n} from 'components/Shared/Styles.js'\nimport { SelectableTile } from 'components/Shared/Tile'\nimport { SettingsContext } from 'context/SettingsContext'\nimport React, { Component } from 'react'\nimport styled, { css } from 'styled-components'\nimport { formatNumber } from 'utils'\n\nconst { Consumer } = SettingsContext\n// pointer-events is going to disbale on the current favorite coin\nconst PriceTileStyled = styled(SelectableTile)`\n  ${props =>\n    props.compact &&\n    css`\n      display: grid;\n      gap: 6px;\n      justify-items: right;\n      grid-template-columns: repeat(3, 1fr);\n      ${fontSize3}\n    `}\n\n  ${props =>\n    props.currentFavCoin &&\n    css`\n      pointer-events: none;\n      ${greenBoxShadow}\n    `}\n`\nconst JustifyLeft = styled.span`\n  justify-self: left;\n`\nconst ChangePercent = styled(CoinSymbol)`\n  color: green;\n\n  ${props =>\n    props.red &&\n    css`\n      color: red;\n    `}\n`\nconst TickerPrice = styled.div`\n  ${fontSizeBig}\n`\n\nclass PriceTile extends Component {\n  render() {\n    const { symbol, data, currentFavCoin, setCurrentFavorite } = this.props\n\n    return (\n      <PriceTileStyled\n        currentFavCoin={currentFavCoin}\n        onClick={() => {\n          setCurrentFavorite(symbol)\n        }}\n      >\n        <CoinTileHeaderGridStyled>\n          <span>{symbol}</span>\n\n          <ChangePercent red={data.CHANGEPCT24HOUR < 0}>\n            {formatNumber(data.CHANGEPCT24HOUR)}%\n          </ChangePercent>\n        </CoinTileHeaderGridStyled>\n\n        <TickerPrice>{formatNumber(data.PRICE)}</TickerPrice>\n      </PriceTileStyled>\n    )\n  }\n}\n\nclass PriceTileCompact extends Component {\n  render() {\n    const { symbol, data, currentFavCoin, setCurrentFavorite } = this.props\n\n    return (\n      <PriceTileStyled\n        compact\n        currentFavCoin={currentFavCoin}\n        onClick={() => {\n          setCurrentFavorite(symbol)\n        }}\n      >\n        <JustifyLeft>{symbol}</JustifyLeft>\n\n        <ChangePercent red={data.CHANGEPCT24HOUR < 0}>\n          {formatNumber(data.CHANGEPCT24HOUR)}\n        </ChangePercent>\n\n        <div>{formatNumber(data.PRICE)}</div>\n      </PriceTileStyled>\n    )\n  }\n}\n\nclass TileClass extends Component {\n  render() {\n    return (\n      <Consumer>\n        {({ currentFavCoin, setCurrentFavorite }) => {\n          const { price, index } = this.props\n          const symbol = Object.keys(price)[0]\n          const data = price[symbol].USD\n\n          return index >= 5 ? (\n            <PriceTileCompact\n              data={data}\n              symbol={symbol}\n              currentFavCoin={currentFavCoin === symbol}\n              setCurrentFavorite={setCurrentFavorite}\n            />\n          ) : (\n            <PriceTile\n              data={data}\n              symbol={symbol}\n              currentFavCoin={currentFavCoin === symbol}\n              setCurrentFavorite={setCurrentFavorite}\n            />\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default TileClass\n","import { AppContext } from 'context/AppContext'\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport TileClass from './PriceTile'\n\nconst { Consumer } = AppContext\nconst PriceGirdStyled = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 16px;\n  margin-top: 40px;\n`\n\nclass PriceGird extends Component {\n  render() {\n    return (\n      <Consumer>\n        {({ prices }) => (\n          <PriceGirdStyled>\n            {prices.map((price, index) => (\n              <TileClass\n                key={Object.keys(price)[0]}\n                price={price}\n                index={index}\n              />\n            ))}\n          </PriceGirdStyled>\n        )}\n      </Consumer>\n    )\n  }\n}\n\nexport default PriceGird\n","import React, { Component } from 'react'\nimport styled, { css } from 'styled-components'\nimport { SettingsContext } from 'context/SettingsContext'\n\nconst ImageStyled = styled.img`\n  height: 50px;\n\n  ${props =>\n    props.spotlight &&\n    css`\n      height: 200px;\n    `}\n`\n\nclass CoinTileImage extends Component {\n  render() {\n    const { Consumer } = SettingsContext\n\n    return (\n      <Consumer>\n        {({ coinBaseUrl }) => {\n          const { coin, spotlight } = this.props\n          const { ImageUrl: imgUrl, Symbol: symbol } = coin\n\n          return (\n            <ImageStyled\n              src={`${coinBaseUrl}${imgUrl}`}\n              alt={symbol}\n              spotlight={spotlight}\n            />\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default CoinTileImage\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Tile } from 'components/Shared/Tile'\nimport CoinTileImage from 'components/Shared/CoinTileImage'\nimport { SettingsContext } from 'context/SettingsContext'\n\nconst { Consumer } = SettingsContext\nconst SpotlightTile = styled(Tile)`\n  text-align: center;\n`\nconst SpotlightName = styled.h2``\n\nclass CoinSpotlight extends Component {\n  render() {\n    return (\n      <Consumer>\n        {({ coins, currentFavCoin }) => {\n          return (\n            <SpotlightTile>\n              <SpotlightName>{coins[currentFavCoin].CoinName}</SpotlightName>\n              <CoinTileImage coin={coins[currentFavCoin]} spotlight />\n            </SpotlightTile>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default CoinSpotlight\n","export default {\n  title: {\n    text: 'Data Visualization'\n  },\n\n  yAxis: {\n    title: {\n      text: 'Prices'\n    }\n  },\n\n  xAxis: {\n    accessibility: {\n      rangeDescription: 'Range: 2010 to 2017'\n    }\n  },\n\n  legend: {\n    layout: 'vertical',\n    align: 'right',\n    verticalAlign: 'middle'\n  },\n\n  plotOptions: {\n    series: {\n      label: {\n        connectorAllowed: false\n      },\n      pointStart: 2010\n    }\n  },\n\n  series: [\n    {\n      name: 'Installation',\n      data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]\n    }\n  ],\n\n  responsive: {\n    rules: [\n      {\n        condition: {\n          maxWidth: 500\n        },\n        chartOptions: {\n          legend: {\n            layout: 'horizontal',\n            align: 'center',\n            verticalAlign: 'bottom'\n          }\n        }\n      }\n    ]\n  }\n}\n","import { Tile } from 'components/Shared/Tile'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport React, { Component } from 'react'\nimport HighchartsOptions from './HighchartsOptions'\nimport HighchartsTheme from './HighchartsTheme'\n\nHighcharts.setOptions(HighchartsTheme)\n\nclass PriceChart extends Component {\n  render() {\n    return (\n      <Tile>\n        <HighchartsReact highcharts={Highcharts} options={HighchartsOptions} />\n      </Tile>\n    )\n  }\n}\n\nexport default PriceChart\n","export default {\n  colors: [\n    '#DDDF0D',\n    '#55BF3B',\n    '#DF5353',\n    '#7798BF',\n    '#aaeeee',\n    '#ff0066',\n    '#eeaaee',\n    '#55BF3B',\n    '#DF5353',\n    '#7798BF',\n    '#aaeeee'\n  ],\n\n  chart: {\n    backgroundColor: '#061a44',\n    borderColor: '#000000',\n    borderWidth: 0,\n    className: 'dark-container',\n    plotBackgroundColor: '#061a44',\n    plotBorderColor: '#cccccc',\n    plotBorderWidth: 0\n  },\n\n  title: {\n    style: {\n      color: '#C0C0C0',\n      font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n    }\n  },\n\n  subtitle: {\n    style: {\n      color: '#666666',\n      font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\n    }\n  },\n\n  xAxis: {\n    gridLineColor: '#333333',\n    gridLineWidth: 0,\n    labels: {\n      style: {\n        color: '#A0A0A0'\n      }\n    },\n    lineColor: '#A0A0A0',\n    tickColor: '#A0A0A0',\n    title: {\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold',\n        fontSize: '12px',\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n      }\n    }\n  },\n\n  yAxis: {\n    gridLineColor: '#333333',\n    gridLineWidth: 0,\n    labels: {\n      style: {\n        color: '#A0A0A0'\n      }\n    },\n    lineColor: '#A0A0A0',\n    minorTickInterval: null,\n    tickColor: '#A0A0A0',\n    tickWidth: 1,\n    title: {\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold',\n        fontSize: '12px',\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n      }\n    }\n  },\n\n  tooltip: {\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\n    style: {\n      color: '#F0F0F0'\n    }\n  },\n\n  toolbar: {\n    itemStyle: {\n      color: 'silver'\n    }\n  },\n\n  plotOptions: {\n    line: {\n      dataLabels: {\n        color: '#CCC'\n      },\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    spline: {\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    scatter: {\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    candlestick: {\n      lineColor: 'white'\n    }\n  },\n\n  legend: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    itemStyle: {\n      font: '9pt Trebuchet MS, Verdana, sans-serif',\n      color: '#A0A0A0'\n    },\n    itemHoverStyle: {\n      color: '#FFF'\n    },\n    itemHiddenStyle: {\n      color: '#444'\n    },\n    title: {\n      style: {\n        color: '#C0C0C0'\n      }\n    }\n  },\n\n  credits: {\n    style: {\n      color: '#666'\n    }\n  },\n\n  labels: {\n    style: {\n      color: '#CCC'\n    }\n  },\n\n  navigation: {\n    buttonOptions: {\n      symbolStroke: '#DDDDDD',\n      theme: {\n        fill: {\n          linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n          stops: [\n            [0.4, '#606060'],\n            [0.6, '#333333']\n          ]\n        },\n        stroke: '#000000'\n      }\n    }\n  },\n\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: {\n        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n        stops: [\n          [0.4, '#888'],\n          [0.6, '#555']\n        ]\n      },\n      stroke: '#000000',\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold'\n      },\n\n      states: {\n        hover: {\n          fill: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n\n            stops: [\n              [0.4, '#BBB'],\n              [0.6, '#888']\n            ]\n          },\n\n          stroke: '#000000',\n          style: {\n            color: 'white'\n          }\n        },\n\n        select: {\n          fill: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n\n            stops: [\n              [0.1, '#000'],\n              [0.3, '#333']\n            ]\n          },\n\n          stroke: '#000000',\n          style: {\n            color: 'yellow'\n          }\n        }\n      }\n    },\n    inputStyle: {\n      backgroundColor: '#333',\n      color: 'silver'\n    },\n    labelStyle: {\n      color: 'silver'\n    }\n  },\n\n  navigator: {\n    handles: {\n      backgroundColor: '#666',\n      borderColor: '#AAA'\n    },\n    outlineColor: '#CCC',\n    maskFill: 'rgba(16, 16, 16, 0.5)',\n    series: {\n      color: '#7798BF',\n      lineColor: '#A6C7ED'\n    }\n  },\n\n  scrollbar: {\n    barBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0.4, '#888'],\n        [0.6, '#555']\n      ]\n    },\n    barBorderColor: '#CCC',\n    buttonArrowColor: '#CCC',\n    buttonBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0.4, '#888'],\n        [0.6, '#555']\n      ]\n    },\n    buttonBorderColor: '#CCC',\n    rifleColor: '#FFF',\n    trackBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0, '#000'],\n        [1, '#333']\n      ]\n    },\n    trackBorderColor: '#666'\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Page from 'components/Shared/Page'\nimport PriceGrid from './PriceGrid'\nimport CoinSpotlight from './CoinSpotlight'\nimport PriceChart from './PriceChart'\n\nconst ChartGrid = styled.div`\n  display: grid;\n  gap: 16px;\n  grid-template-columns: 1fr 3fr;\n  margin-top: 30px;\n`\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <Page name=\"dashboard\">\n        <PriceGrid />\n\n        <ChartGrid>\n          <CoinSpotlight />\n          <PriceChart />\n        </ChartGrid>\n      </Page>\n    )\n  }\n}\n\nexport default Dashboard\n","import React, { Component } from 'react'\nimport { SettingsContext } from 'context/SettingsContext'\nimport CoinTileImage from 'components/Shared/CoinTileImage'\nimport { DeletableTile, DisabledTile, SelectableTile } from '../Shared/Tile'\nimport CoinTileHeaderGrid from './CoinTileHeaderGrid'\n\nconst { Consumer } = SettingsContext\n\nclass CoinTile extends Component {\n  handleClick = (addCoin, removeCoin) => {\n    const { coin, topSection } = this.props\n\n    topSection ? removeCoin(coin.Name) : addCoin(coin.Name)\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { addCoin, removeCoin, isInFavoriteCoins } = value\n          const { coin, topSection } = this.props\n\n          let CoinTileClass\n\n          if (topSection) {\n            CoinTileClass = DeletableTile\n          } else if (isInFavoriteCoins(coin.Name)) {\n            CoinTileClass = DisabledTile\n          } else {\n            CoinTileClass = SelectableTile\n          }\n\n          return (\n            <CoinTileClass\n              onClick={() => this.handleClick(addCoin, removeCoin)}\n            >\n              <CoinTileHeaderGrid coin={coin} topSection={topSection} />\n              <CoinTileImage coin={coin} />\n            </CoinTileClass>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default CoinTile\n","import { SettingsContext } from 'context/SettingsContext'\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport CoinTile from './CoinTile'\n\nconst { Consumer } = SettingsContext\nconst CoinGridStyled = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n  grid-gap: 15px;\n  margin-top: 40px;\n`\n\nclass CoinGrid extends Component {\n  getLowerSectionCoins(coins, filteredCoins) {\n    if (filteredCoins && Object.keys(filteredCoins)) {\n      return Object.keys(filteredCoins)\n    } else {\n      return Object.keys(coins).slice(0, 300) // The first five hundred coin keys\n    }\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { coins, favoriteCoins: favCoinKeys, filteredCoins } = value\n          const { topSection } = this.props\n\n          const coinKeys = topSection\n            ? favCoinKeys\n            : this.getLowerSectionCoins(coins, filteredCoins)\n\n          return (\n            <CoinGridStyled>\n              {coinKeys.map(coinKey => (\n                <CoinTile\n                  key={coinKey}\n                  coin={coins[coinKey]}\n                  topSection={topSection}\n                />\n              ))}\n            </CoinGridStyled>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default CoinGrid\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { AppContext } from 'context/AppContext'\nimport { SettingsContext } from 'context/SettingsContext'\nimport { color3, fontSize1, greenBoxShadow } from 'components/Shared/Styles'\n\nconst CenterDiv = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst ConfirmButtonStyled = styled.button`\n  margin: 20px;\n  border: none;\n  padding: 5px;\n  color: ${color3};\n  background-color: transparent;\n  cursor: pointer;\n  ${fontSize1}\n\n  &:hover {\n    ${greenBoxShadow}\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nclass ConfirmButton extends Component {\n  render() {\n    const { Consumer: AppContextConsumer } = AppContext\n    const { Consumer: SettingsContextConsumer } = SettingsContext\n\n    return (\n      <AppContextConsumer>\n        {value => (\n          <SettingsContextConsumer>\n            {({ favoriteCoins: favCoinKeys }) => {\n              const { confirmFavorites } = value\n\n              return (\n                <CenterDiv>\n                  <ConfirmButtonStyled\n                    onClick={() => confirmFavorites(favCoinKeys)}\n                  >\n                    Confirm Favorites\n                  </ConfirmButtonStyled>\n                </CenterDiv>\n              )\n            }}\n          </SettingsContextConsumer>\n        )}\n      </AppContextConsumer>\n    )\n  }\n}\n\nexport default ConfirmButton\n","import { darkBlueBackground, fontSize2 } from 'components/Shared/Styles'\nimport { SettingsContext } from 'context/SettingsContext'\nimport fuzzy from 'fuzzy'\nimport _ from 'lodash'\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst { Consumer } = SettingsContext\nconst SearchGrid = styled.div`\n  display: grid;\n  grid-template-columns: 200px 1fr;\n`\nconst SearchTitle = styled.h2`\n  margin: 0;\n`\nconst SearchInput = styled.input`\n  ${darkBlueBackground}\n  ${fontSize2}\n  color: #1163c9;\n  border: 1px solid;\n  height: 25px;\n  place-self: center left;\n`\n\nclass Search extends Component {\n  // Delay invoking function until after 1s\n  handleFilterCoins = _.debounce((inputValue, coins, setFilteredCoins) => {\n    // Get all the coin symbols\n    const coinSymbols = Object.keys(coins)\n    // Get all the coin names, map symbol to name\n    const coinNames = coinSymbols.map(key => coins[key].CoinName)\n    // Combine a list of the coin symbols and the coin names together\n    const allStringsToSearch = coinSymbols.concat(coinNames)\n    // A list of the results that has come back from the search\n    const fuzzyResults = fuzzy\n      .filter(inputValue, allStringsToSearch, {})\n      .map(result => result.string)\n\n    let results = {}\n    // Deduplicate(去除重复) the fuzzy results, reutrn an array\n    Object.entries(coins).forEach(item => {\n      const symbol = item[0]\n      const coin = item[1]\n      const name = coin.CoinName\n\n      if (fuzzyResults.includes(symbol) || fuzzyResults.includes(name)) {\n        results[symbol] = coin\n      }\n    })\n    setFilteredCoins(results)\n\n    // An easier way || 更简单的方法\n    // const filteredCoins = _.pickBy(coins, (coin, symbolKey) => {\n    //   const coinName = coin.CoinName\n    //   return fuzzyResults.includes(symbolKey) || fuzzyResults.includes(coinName)\n    // })\n  }, 1000)\n\n  handleKeyUp(event, coins, setFilteredCoins) {\n    const inputValue = event.target.value\n\n    if (!inputValue) {\n      setFilteredCoins(null)\n      return false\n    }\n\n    this.handleFilterCoins(inputValue, coins, setFilteredCoins)\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {({ coins, setFilteredCoins }) => {\n          return (\n            <SearchGrid>\n              <SearchTitle>Search all coins</SearchTitle>\n              <SearchInput\n                onKeyUp={event =>\n                  this.handleKeyUp(event, coins, setFilteredCoins)\n                }\n              />\n            </SearchGrid>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Search\n","import { AppContext } from 'context/AppContext'\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst WelcomeStyled = styled.h1`\n  margin: 0;\n  font-weight: normal;\n  font-size: 16px;\n`\n\nclass Welcome extends Component {\n  render() {\n    const { Consumer } = AppContext\n\n    return (\n      <Consumer>\n        {({ firstVisit }) => {\n          return firstVisit ? (\n            <WelcomeStyled>\n              Welcome to CryptoDash, please select your favorite coins to begin.\n            </WelcomeStyled>\n          ) : null\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Welcome\n","import React, { Component } from 'react'\nimport Page from 'components/Shared/Page'\nimport CoinGrid from './CoinGrid'\nimport ConfirmButton from './ConfirmButton'\nimport Search from './Search'\nimport WelcomeMessage from './WelcomeMessage'\n\nclass Settings extends Component {\n  render() {\n    return (\n      <Page name=\"settings\">\n        <WelcomeMessage />\n        <CoinGrid topSection={true} />\n        <ConfirmButton />\n        <Search />\n        <CoinGrid topSection={false} />\n      </Page>\n    )\n  }\n}\n\nexport default Settings\n","import { AppContext } from 'context/AppContext'\nimport { SettingsContext } from 'context/SettingsContext'\nimport React, { Component } from 'react'\n\nclass Content extends Component {\n  render() {\n    return (\n      <AppContext.Consumer>\n        {({ prices, firstVisit }) => {\n          return (\n            <SettingsContext.Consumer>\n              {({ coins }) => {\n                if (!coins) {\n                  return <div>Loading Coins...</div>\n                }\n\n                if (!firstVisit && prices.length === 0) {\n                  return <div>Loading Prices...</div>\n                }\n\n                return this.props.children\n              }}\n            </SettingsContext.Consumer>\n          )\n        }}\n      </AppContext.Consumer>\n    )\n  }\n}\n\nexport default Content\n","import styled from 'styled-components'\n\nexport default styled.div`\n  padding: 40px;\n`\n","import { AppContext } from 'context/AppContext'\nimport { SettingsContext } from 'context/SettingsContext'\nimport React, { Component } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst AppNavBarStyled = styled.header`\n  display: grid;\n  grid-template-columns: 180px auto 100px 100px 100px;\n  margin-bottom: 40px;\n`\nconst Logo = styled.h1`\n  margin: 0;\n  font-size: 1.5em;\n`\nconst ControlButtonElem = styled.button`\n  cursor: pointer;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  color: white;\n\n  ${props =>\n    props.active &&\n    css`\n      text-shadow: 0px 0px 20px #03ff03;\n    `}\n\n  &:focus {\n    outline: none;\n  }\n`\nconst LanguageButton = styled(ControlButtonElem)``\n\n// Extend another class\nclass ControlButton extends Component {\n  capitalize(str) {\n    // 首字母大写，其余字母小写\n    return str.charAt(0).toUpperCase() + str.substring(1).toLowerCase()\n  }\n\n  handleClick(name, setPage, favoriteCoins, confirmFavorites) {\n    if (name === 'dashboard') {\n      confirmFavorites(favoriteCoins)\n    }\n\n    setPage(name)\n  }\n\n  render() {\n    return (\n      <AppContext.Consumer>\n        {({ page, setPage, confirmFavorites }) => (\n          <SettingsContext.Consumer>\n            {({ favoriteCoins }) => {\n              const { name } = this.props\n\n              return (\n                <ControlButtonElem\n                  active={page === name}\n                  onClick={() => {\n                    this.handleClick(\n                      name,\n                      setPage,\n                      favoriteCoins,\n                      confirmFavorites\n                    )\n                  }}\n                >\n                  {this.capitalize(name)}\n                </ControlButtonElem>\n              )\n            }}\n          </SettingsContext.Consumer>\n        )}\n      </AppContext.Consumer>\n    )\n  }\n}\n\nclass AppNavBar extends Component {\n  render() {\n    return (\n      <AppNavBarStyled>\n        <Logo>CryptoDash</Logo>\n        <div className=\"text-transparent\">Space Remaining</div>\n        <ControlButton name=\"dashboard\" active />\n        <ControlButton name=\"settings\" />\n        <LanguageButton>Chinese</LanguageButton>\n      </AppNavBarStyled>\n    )\n  }\n}\n\nexport default AppNavBar\n","import Dashboard from 'components/Dashboard'\nimport Settings from 'components/Settings'\nimport Content from 'components/Shared/Content'\nimport { AppContextProvider } from 'context/AppContext'\nimport { SettingsContextProvider } from 'context/SettingsContext'\nimport React, { Component } from 'react'\nimport AppLayout from './AppLayout'\nimport AppNavbar from './AppNavbar'\n\nclass App extends Component {\n  render() {\n    return (\n      <AppLayout>\n        <AppContextProvider>\n          <SettingsContextProvider>\n            <AppNavbar />\n\n            <Content>\n              <Settings />\n              <Dashboard />\n            </Content>\n          </SettingsContextProvider>\n        </AppContextProvider>\n      </AppLayout>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}